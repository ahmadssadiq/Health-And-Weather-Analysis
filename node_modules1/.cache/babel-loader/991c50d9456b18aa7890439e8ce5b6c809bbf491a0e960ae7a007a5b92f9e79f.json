{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadsadiq/Desktop/my-app/src/App.js\",\n  _s = $RefreshSig$();\n/* \nImports HealthData and Index\n Two pieces of state are defined using useState: weatherData and healthData.\nFunctions fetchWeather and fetchHealth are defined to fetch data from APIs.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n// Import components\nimport HealthData from 'HealthData';\nimport Index from 'index';\n\n// Import API functions\nimport { getHealthData } from 'healthStatsAPI';\nimport { getWeatherData } from 'weatherAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [healthData, setHealthData] = useState(null);\n\n  // Fetch weather data example\n  const fetchWeather = async city => {\n    try {\n      const data = await getWeatherData(city);\n      setWeatherData(data);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n\n  // Fetch health data example\n  const fetchHealth = async parameters => {\n    try {\n      const data = await getHealthData(parameters);\n      setHealthData(data);\n    } catch (error) {\n      console.error('Error fetching health data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Index, {\n          fetchWeather: fetchWeather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/health-data\",\n        element: /*#__PURE__*/_jsxDEV(HealthData, {\n          fetchHealth: fetchHealth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"IQiFC5StilcW3Hwxq9G6a+d4xCg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","HealthData","Index","getHealthData","getWeatherData","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","healthData","setHealthData","fetchWeather","city","data","error","console","fetchHealth","parameters","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ahmadsadiq/Desktop/my-app/src/App.js"],"sourcesContent":["/* \nImports HealthData and Index\n Two pieces of state are defined using useState: weatherData and healthData.\nFunctions fetchWeather and fetchHealth are defined to fetch data from APIs.\n */\n\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n// Import components\nimport HealthData from 'HealthData';\nimport Index from 'index';\n\n// Import API functions\nimport { getHealthData } from 'healthStatsAPI';\nimport { getWeatherData } from 'weatherAPI';\n\nfunction App() {\n    const [weatherData, setWeatherData] = useState(null);\n    const [healthData, setHealthData] = useState(null);\n\n    // Fetch weather data example\n    const fetchWeather = async (city) => {\n        try {\n            const data = await getWeatherData(city);\n            setWeatherData(data);\n        } catch (error) {\n            console.error('Error fetching weather data:', error);\n        }\n    };\n\n    // Fetch health data example\n    const fetchHealth = async (parameters) => {\n        try {\n            const data = await getHealthData(parameters);\n            setHealthData(data);\n        } catch (error) {\n            console.error('Error fetching health data:', error);\n        }\n    };\n\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<Index fetchWeather={fetchWeather} />} />\n                <Route path=\"/health-data\" element={<HealthData fetchHealth={fetchHealth} />} />\n                {/* Add more routes as needed */}\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;;AAEzE;AACA,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,cAAc,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAMkB,YAAY,GAAG,MAAOC,IAAI,IAAK;IACjC,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMX,cAAc,CAACU,IAAI,CAAC;MACvCJ,cAAc,CAACK,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD;EACJ,CAAC;;EAED;EACA,MAAME,WAAW,GAAG,MAAOC,UAAU,IAAK;IACtC,IAAI;MACA,MAAMJ,IAAI,GAAG,MAAMZ,aAAa,CAACgB,UAAU,CAAC;MAC5CP,aAAa,CAACG,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;EAED,oBACIV,OAAA,CAACR,MAAM;IAAAsB,QAAA,eACHd,OAAA,CAACP,MAAM;MAAAqB,QAAA,gBACHd,OAAA,CAACN,KAAK;QAACqB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEhB,OAAA,CAACJ,KAAK;UAACW,YAAY,EAAEA;QAAa;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClEpB,OAAA,CAACN,KAAK;QAACqB,IAAI,EAAC,cAAc;QAACC,OAAO,eAAEhB,OAAA,CAACL,UAAU;UAACiB,WAAW,EAAEA;QAAY;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB;AAAClB,EAAA,CAjCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}